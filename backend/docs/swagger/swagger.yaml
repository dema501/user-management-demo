basePath: /api/v1
definitions:
  user-management_internal_models.User:
    properties:
      createdAt:
        type: string
      department:
        description: |-
          Department the user belongs to, alphanumeric with spaces allowed
          maxLength: 255
          example: Engineering
        maxLength: 255
        type: string
      email:
        description: |-
          Email address of the user, must be a valid email format
          required: true
          maxLength: 255
          format: email
          example: john.doe@example.com
        maxLength: 255
        type: string
      firstName:
        description: |-
          The first name of the user, must be provided, minimum 1 character, can have spaces
          required: true
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: John
        maxLength: 255
        minLength: 1
        type: string
      id:
        type: integer
      lastName:
        description: |-
          The last name of the user, must be provided, minimum 1 character, can have spaces
          required: true
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: Doe
        maxLength: 255
        minLength: 1
        type: string
      updatedAt:
        type: string
      userName:
        description: |-
          The username for the user, must be provided, minimum 4 alphanumeric characters
          required: true
          minLength: 4
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: johndoe
        maxLength: 255
        minLength: 4
        type: string
      userStatus:
        allOf:
        - $ref: '#/definitions/user-management_internal_models.UserStatus'
        description: |-
          Status of the user (A=Active, I=Inactive, T=Terminated)
          required: true
          enum: A,I,T
          example: A
        enum:
        - A
        - I
        - T
    required:
    - email
    - firstName
    - lastName
    - userName
    - userStatus
    type: object
  user-management_internal_models.UserCreateRequest:
    properties:
      department:
        description: |-
          Department the user belongs to, alphanumeric with spaces allowed
          maxLength: 255
          example: Engineering
        maxLength: 255
        type: string
      email:
        description: |-
          Email address of the user, must be a valid email format
          required: true
          maxLength: 255
          format: email
          example: john.doe@example.com
        maxLength: 255
        type: string
      firstName:
        description: |-
          The first name of the user, must be provided, minimum 1 character, can have spaces
          required: true
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: John
        maxLength: 255
        minLength: 1
        type: string
      lastName:
        description: |-
          The last name of the user, must be provided, minimum 1 character, can have spaces
          required: true
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: Doe
        maxLength: 255
        minLength: 1
        type: string
      userName:
        description: |-
          The username for the user, must be provided, minimum 4 alphanumeric characters
          required: true
          minLength: 4
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: johndoe
        maxLength: 255
        minLength: 4
        type: string
      userStatus:
        allOf:
        - $ref: '#/definitions/user-management_internal_models.UserStatus'
        description: |-
          Status of the user (A=Active, I=Inactive, T=Terminated)
          required: true
          enum: A,I,T
          example: A
        enum:
        - A
        - I
        - T
    required:
    - email
    - firstName
    - lastName
    - userName
    - userStatus
    type: object
  user-management_internal_models.UserStatus:
    enum:
    - A
    - I
    - T
    type: string
    x-enum-varnames:
    - UserStatusActive
    - UserStatusInactive
    - UserStatusTerminated
  user-management_internal_models.UserUpdateRequest:
    properties:
      department:
        description: |-
          Department the user belongs to, alphanumeric with spaces allowed
          maxLength: 255
          example: Engineering
        maxLength: 255
        type: string
      email:
        description: |-
          Email address of the user, must be a valid email format
          required: true
          maxLength: 255
          format: email
          example: john.doe@example.com
        maxLength: 255
        type: string
      firstName:
        description: |-
          The first name of the user, must be provided, minimum 1 character, can have spaces
          required: true
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: John
        maxLength: 255
        minLength: 1
        type: string
      lastName:
        description: |-
          The last name of the user, must be provided, minimum 1 character, can have spaces
          required: true
          minLength: 1
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: Doe
        maxLength: 255
        minLength: 1
        type: string
      userName:
        description: |-
          The username for the user, must be provided, minimum 4 alphanumeric characters
          required: true
          minLength: 4
          maxLength: 255
          pattern: ^[a-zA-Z0-9]+$
          example: johndoe
        maxLength: 255
        minLength: 4
        type: string
      userStatus:
        allOf:
        - $ref: '#/definitions/user-management_internal_models.UserStatus'
        description: |-
          Status of the user (A=Active, I=Inactive, T=Terminated)
          required: true
          enum: A,I,T
          example: A
        enum:
        - A
        - I
        - T
    required:
    - email
    - firstName
    - lastName
    - userName
    - userStatus
    type: object
host: localhost:8080
info:
  contact: {}
  description: A simple user management API
  title: User Management API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/user-management_internal_models.User'
            type: array
      summary: List all users
    post:
      consumes:
      - application/json
      description: create a new user
      parameters:
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user-management_internal_models.UserCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user-management_internal_models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a user
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: delete a user by ID
      parameters:
      - description: User ID (int64)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a user
    get:
      consumes:
      - application/json
      description: get user by ID
      parameters:
      - description: User ID (int64)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user-management_internal_models.User'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a user
    put:
      consumes:
      - application/json
      description: update a user by ID
      parameters:
      - description: User ID (int64)
        in: path
        name: id
        required: true
        type: string
      - description: User Data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user-management_internal_models.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user-management_internal_models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "422":
          description: Unprocessable Entity
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a user
swagger: "2.0"
