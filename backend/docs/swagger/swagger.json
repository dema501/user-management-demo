{
    "swagger": "2.0",
    "info": {
        "description": "A simple user management API",
        "title": "User Management API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/users": {
            "get": {
                "description": "get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a user",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (int64)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "update a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (int64)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID (int64)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "userName",
                "userStatus"
            ],
            "properties": {
                "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-03-27T10:23:51.495798-05:00"
                },
                "department": {
                    "description": "Department\n\t@maxLength\t255\n\t@example\tEngineering",
                    "type": "string",
                    "maxLength": 255,
                    "example": "Engineering"
                },
                "email": {
                    "description": "Email address\n\t@maxLength\t255\n\t@format\t\temail\n\t@example\tjohn.doe@example.com",
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "example": "john.doe@example.com"
                },
                "firstName": {
                    "description": "First name\n\t@minLength\t1\n\t@maxLength\t255\n\t@pattern\t^[\\p{L}\\p{N}]+$\n\t@example\tJohn",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastName": {
                    "description": "Last name\n\t@minLength\t1\n\t@maxLength\t255\n\t@pattern\t^[\\p{L}\\p{N}]+$\n\t@example\tDoe",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Doe"
                },
                "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-03-27T10:23:51.495798-05:00"
                },
                "userName": {
                    "description": "The username\n\t@minLength\t4\n\t@maxLength\t255\n\t@pattern\t^[a-zA-Z0-9]+$\n\t@example\tjohndoe",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 4,
                    "example": "johndoe"
                },
                "userStatus": {
                    "description": "User Status\n\t@enum\t\tA,I,T\n\t@example\tA",
                    "enum": [
                        "A",
                        "I",
                        "T"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserStatus"
                        }
                    ],
                    "example": "A"
                }
            }
        },
        "UserCreateRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "userName",
                "userStatus"
            ],
            "properties": {
                "department": {
                    "description": "Department\n\t@maxLength\t255\n\t@example\tEngineering",
                    "type": "string",
                    "maxLength": 255,
                    "example": "Engineering"
                },
                "email": {
                    "description": "Email address\n\t@maxLength\t255\n\t@format\t\temail\n\t@example\tjohn.doe@example.com",
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "example": "john.doe@example.com"
                },
                "firstName": {
                    "description": "First name\n\t@minLength\t1\n\t@maxLength\t255\n\t@pattern\t^[\\p{L}\\p{N}]+$\n\t@example\tJohn",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "John"
                },
                "lastName": {
                    "description": "Last name\n\t@minLength\t1\n\t@maxLength\t255\n\t@pattern\t^[\\p{L}\\p{N}]+$\n\t@example\tDoe",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Doe"
                },
                "userName": {
                    "description": "The username\n\t@minLength\t4\n\t@maxLength\t255\n\t@pattern\t^[a-zA-Z0-9]+$\n\t@example\tjohndoe",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 4,
                    "example": "johndoe"
                },
                "userStatus": {
                    "description": "User Status\n\t@enum\t\tA,I,T\n\t@example\tA",
                    "enum": [
                        "A",
                        "I",
                        "T"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserStatus"
                        }
                    ],
                    "example": "A"
                }
            }
        },
        "UserStatus": {
            "type": "string",
            "enum": [
                "A",
                "I",
                "T"
            ],
            "x-enum-varnames": [
                "UserStatusActive",
                "UserStatusInactive",
                "UserStatusTerminated"
            ]
        },
        "UserUpdateRequest": {
            "type": "object",
            "required": [
                "email",
                "firstName",
                "lastName",
                "userName",
                "userStatus"
            ],
            "properties": {
                "department": {
                    "description": "Department\n\t@maxLength\t255\n\t@example\tEngineering",
                    "type": "string",
                    "maxLength": 255,
                    "example": "Engineering"
                },
                "email": {
                    "description": "Email address\n\t@maxLength\t255\n\t@format\t\temail\n\t@example\tjohn.doe@example.com",
                    "type": "string",
                    "format": "email",
                    "maxLength": 255,
                    "example": "john.doe@example.com"
                },
                "firstName": {
                    "description": "First name\n\t@minLength\t1\n\t@maxLength\t255\n\t@pattern\t^[\\p{L}\\p{N}]+$\n\t@example\tJohn",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "John"
                },
                "lastName": {
                    "description": "Last name\n\t@minLength\t1\n\t@maxLength\t255\n\t@pattern\t^[\\p{L}\\p{N}]+$\n\t@example\tDoe",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "example": "Doe"
                },
                "userName": {
                    "description": "The username\n\t@minLength\t4\n\t@maxLength\t255\n\t@pattern\t^[a-zA-Z0-9]+$\n\t@example\tjohndoe",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 4,
                    "example": "johndoe"
                },
                "userStatus": {
                    "description": "User Status\n\t@enum\t\tA,I,T\n\t@example\tA",
                    "enum": [
                        "A",
                        "I",
                        "T"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/UserStatus"
                        }
                    ],
                    "example": "A"
                }
            }
        }
    }
}